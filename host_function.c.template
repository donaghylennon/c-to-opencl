    size_t global = domain_size;
    size_t local;

    <INPUT BUFFERS>

    // Create buffers
    <CREATE BUFFERS>

    // Write to input buffers
    <WRITE BUFFERS>

    // Set kernel arguments
    <SET KERNEL ARGUMENTS>

    // Enqueue and run kernel
    err = clEnqueueNDRangeKernel(command_queue, kernel<KERNEL_ID>, 1, NULL, &global, NULL, 0, NULL, NULL);
    if(err != CL_SUCCESS) {
        fprintf(stderr,"OpenCL Error: Failed to enqueue kernel: %d\n", err);
        exit(EXIT_FAILURE);
    }

    // Block until kernel is finished
    err = clFinish(command_queue);
    if(err != CL_SUCCESS) {
        fprintf(stderr,"OpenCL Error: Failed to block until queue finished: %d\n", err);
        exit(EXIT_FAILURE);
    }

    // Read back output buffers
    <READ BUFFERS>

    // Free buffers
    <RELEASE BUFFERS>
